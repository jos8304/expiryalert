{"ast":null,"code":"const BASE_URL = 'https://learn.codeit.kr/api';\nexport async function getFoods({\n  order = '',\n  cursor = '',\n  limit = 10,\n  search = ''\n}) {\n  const query = `order=${order}&cursor=${cursor}&limit=${limit}&search=${search}`;\n  const response = await fetch(`${BASE_URL}/foods?${query}`);\n  if (!response.ok) {\n    throw new Error('데이터를 불러오는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\nexport async function createFood(formData) {\n  const response = await fetch(`${BASE_URL}/foods`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 생성하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\nexport async function updateFood(id, formData) {\n  const response = await fetch(`${BASE_URL}/foods/${id}`, {\n    method: 'PUT',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 수정하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\nexport async function deleteFood(id) {\n  const response = await fetch(`${BASE_URL}/foods/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 삭제하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}","map":{"version":3,"names":["BASE_URL","getFoods","order","cursor","limit","search","query","response","fetch","ok","Error","body","json","createFood","formData","method","updateFood","id","deleteFood"],"sources":["C:/Users/jos83/project/expiryalert/src/api.js"],"sourcesContent":["const BASE_URL = 'https://learn.codeit.kr/api';\n\nexport async function getFoods({\n  order = '',\n  cursor = '',\n  limit = 10,\n  search = '',\n}) {\n  const query = `order=${order}&cursor=${cursor}&limit=${limit}&search=${search}`;\n  const response = await fetch(`${BASE_URL}/foods?${query}`);\n  if (!response.ok) {\n    throw new Error('데이터를 불러오는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\n\nexport async function createFood(formData) {\n  const response = await fetch(`${BASE_URL}/foods`, {\n    method: 'POST',\n    body: formData,\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 생성하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\n\nexport async function updateFood(id, formData) {\n  const response = await fetch(`${BASE_URL}/foods/${id}`, {\n    method: 'PUT',\n    body: formData,\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 수정하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\n\nexport async function deleteFood(id) {\n  const response = await fetch(`${BASE_URL}/foods/${id}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) {\n    throw new Error('데이터를 삭제하는데 실패했습니다');\n  }\n  const body = await response.json();\n  return body;\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,6BAA6B;AAE9C,OAAO,eAAeC,QAAQA,CAAC;EAC7BC,KAAK,GAAG,EAAE;EACVC,MAAM,GAAG,EAAE;EACXC,KAAK,GAAG,EAAE;EACVC,MAAM,GAAG;AACX,CAAC,EAAE;EACD,MAAMC,KAAK,GAAG,SAASJ,KAAK,WAAWC,MAAM,UAAUC,KAAK,WAAWC,MAAM,EAAE;EAC/E,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,UAAUM,KAAK,EAAE,CAAC;EAC1D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb;AAEA,OAAO,eAAeE,UAAUA,CAACC,QAAQ,EAAE;EACzC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,QAAQ,EAAE;IAChDe,MAAM,EAAE,MAAM;IACdJ,IAAI,EAAEG;EACR,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb;AAEA,OAAO,eAAeK,UAAUA,CAACC,EAAE,EAAEH,QAAQ,EAAE;EAC7C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,UAAUiB,EAAE,EAAE,EAAE;IACtDF,MAAM,EAAE,KAAK;IACbJ,IAAI,EAAEG;EACR,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb;AAEA,OAAO,eAAeO,UAAUA,CAACD,EAAE,EAAE;EACnC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,UAAUiB,EAAE,EAAE,EAAE;IACtDF,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}